openapi: 3.0.0
info:
  title: MindsDB API
  description: >-
    OpenAPI Specification for MindsDB's REST API. Each API Endpoint corresponds
    to a specific SQL Statement e.g POST /model => CREATE MODEL
  version: 0.0.1
  contact:
    email: admin@mindsdb.com
  license:
    name: GNU General Public License v3.0
    url: 'https://github.com/mindsdb/mindsdb/blob/staging/LICENSE'
servers:
  - url: 'http://127.0.0.1:47334/v1/api'
    description: MindsDB local deployments
components:
  schemas:
    Database:
      type: object
      properties:
        name:
          type: string
        engine:
          type: string
          description: Handler used to create this database (e.g. postgres)
        type:
          type: string
          description: Type of database (data | project | system)
    Project:
      type: object
      properties:
        name:
          type: string
paths:
  '/api/databases':
    get:
      security:
        - ApiKeyAuth: []
      summary: Returns a list of database names.
      description: Gets all databases created by the user.
      responses:
        '200':
          description: A JSON array of database names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Database'

        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    post:
      security:
        - ApiKeyAuth: []
      summary: Creates a new database connection.
      description: Creates a new database connection. The example parameters below are for connecting to [MySQL](/data-integrations/mysql). See [here](/data-integrations/all-data-integrations) for which parameters to use for your datasource.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                engine:
                  type: string
                parameters:
                  type: object
                  description: Parameters used to connect to your data source. These example parameters are for connecting to [MySQL](/data-integrations/mysql). See [here](/data-integrations/all-data-integrations) for which parameters to use for your datasource.
                  properties:
                    user:
                      type: string
                    password:
                      type: string
                    host:
                      type: string
                    port:
                      type: string
                    database:
                      type: string
      responses:
        # OpenAPI spec defines '200' status as a successful operation, so even though the
        # response code is '201', we need to use '200' so docs are properly generated.
        '200':
          description: The created database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '409':
          description: Database already exists
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string

  '/api/databases/{databaseName}':
    get:
      security:
        - ApiKeyAuth: []
      summary: Gets info about existing database.
      description: Gets info about an existing database.
      parameters:
        - name: databaseName
          in: path
          description: Name of existing database
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON object with database informations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'

        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Database not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string

    put:
      security:
        - ApiKeyAuth: []
      summary: Updates an existing database connection.
      description: Updates an existing database connection, or creates a new connection if one doesn't exist. The example parameters below are for updating a [MySQL](/data-integrations/mysql) connection. See [here](/data-integrations/all-data-integrations) for which parameters to use for your datasource.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                engine:
                  type: string
                parameters:
                  type: object
                  description: Parameters used to connect to your data source. These example parameters are for connecting to [MySQL](/data-integrations/mysql). See [here](/data-integrations/all-data-integrations) for which parameters to use for your datasource.
                  properties:
                    user:
                      type: string
                    password:
                      type: string
                    host:
                      type: string
                    port:
                      type: string
                    database:
                      type: string
      responses:
        '200':
          description: Database was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    delete:
      security:
        - ApiKeyAuth: []
      summary: Deletes an existing database.
      description: Deletes an existing database connection by name.
      parameters:
        - name: databaseName
          in: path
          description: Name of database to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An empty response indicates success
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Database not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/api/projects':
    get:
      security:
        - ApiKeyAuth: []
      summary: Returns a list of projects.
      description: Gets all projects created by the user.
      responses:
        '200':
          description: A JSON array of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/api/projects/{projectName}':
    get:
      security:
        - ApiKeyAuth: []
      summary: Get a project by name.
      description: Gets a project created by the user.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
      description: Gets a project by name.
      responses:
        '200':
          description: The returned project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string

  '/projects/{projectName}/models':
    post:
      security:
        - ApiKeyAuth: []
      summary: This endpoint trains a new ML Model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                predictor_name:
                  type: string
                  description: Name of the model to be created.
                integration_name:
                  type: string
                  description: Name of the database integration created
                target_column:
                  type: string
                  description: Column to be predicted.
                query:
                  type: string
                  description: The SQL query to get the data
      responses:
        '200':
          description: Model training started
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    get:
      security:
        - ApiKeyAuth: []
      summary: Returns a list of models.
      description: This endpoint returnes info about all models in the project.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of models names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/projects/{projectName}/models/{modelName}':
    get:
      security:
        - ApiKeyAuth: []
      summary: Gets info about specific model.
      description: This endpoint retrieves the status of a specific model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: modelName
          in: path
          description: The name of the model
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON object with database informations
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    delete:
      security:
        - ApiKeyAuth: []
      summary: Deletes an existing model.
      description: This endpoint deletes a model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: modelName
          in: path
          description: The name of the model
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of database names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Database not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/projects/{projectName}/models/{modelName}/predict':
    post:
      security:
        - ApiKeyAuth: []
      summary: This endpoint fetches predictions from the model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: modelName
          in: path
          description: The name of the model
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              properties:
                data:
                  type: object
                  description: The data for querying the model as key/value e.g column name/value.
      responses:
        '200':
          description: Model queried succesfully
          content:
            application/json:
              schema:
                type: array
                properties:
                  prediction:
                    type: object
                    description: Prediction object that contains data columns and the target value, confidence, lower and upper bound.
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/projects/{projectName}/models/{modelName}/describe':
    get:
      security:
        - ApiKeyAuth: []
      summary: Describe a model
      description: This endpoint returns the attributes of a specific model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: modelName
          in: path
          description: The name of the model
          required: true
          schema:
            type: string
        - name: features
          in: query
          description: Include how the model encoded data info
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A JSON object with model informations
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/projects/{projectName}/models/{modelName}/retrain':
    post:
      security:
        - ApiKeyAuth: []
      summary: This endpoint retrains existing model.
      parameters:
        - name: projectName
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: modelName
          in: path
          description: The name of the model
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelName:
                  type: string
                  description: Name of the model
      responses:
        '200':
          description: Model training started
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  /views:
    post:
      security:
        - ApiKeyAuth: []
      summary: This endpoint creates a view which is a result-set of the SELECT statement.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: Name of the project where the view is created
                view_name:
                  type: string
                  description: Name of the view
                query:
                  type: string
                  description: The SQL query that will save the result-set in a view.
      responses:
        '200':
          description: View created
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    get:
      security:
        - ApiKeyAuth: []
      summary: List all views in a project
      description: This endpoint returns a list of all views
      responses:
        '200':
          description: A JSON object with view names
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/views/{viewName}':
    get:
      security:
        - ApiKeyAuth: []
      summary: SELECT from VIEW
      description: This endpoint retrieves the result-set from the view.
      parameters:
        - name: viewName
          in: path
          description: The name of the view
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON object with SELECT data
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: View not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    delete:
      security:
        - ApiKeyAuth: []
      summary: Deletes an existing view.
      description: This endpoint deletes a view.
      parameters:
        - name: viewName
          in: path
          description: view name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesfully deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: View not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  /tables:
    post:
      security:
        - ApiKeyAuth: []
      summary: This endpoint creates a new table with the predictions result-set.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: Name of the project where the table is created
                table_name:
                  type: string
                  description: Name of the table
                query:
                  type: string
                  description: The SQL query that will save the result-set in a table.
      responses:
        '200':
          description: Table created
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
  '/tables/{tableName}':
    get:
      security:
        - ApiKeyAuth: []
      summary: SELECT from Table
      description: This endpoint retrieves the Select result-set from the table.
      parameters:
        - name: tableName
          in: path
          description: The name of the table
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON object with SELECT data
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Table not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
    delete:
      security:
        - ApiKeyAuth: []
      summary: Deletes an existing table.
      description: This endpoint deletes a table.
      parameters:
        - name: tableName
          in: path
          description: table name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesfully deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Invalid API key error message
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '404':
          description: Table not found
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string