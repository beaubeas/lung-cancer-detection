language: python
services:
  - docker
matrix:
  include:
    - name: "Python 3.7.3 on Ubuntu 16.0.4"
      os: linux
      python: 3.7.3
      node: 11.15.0
      dist: xenial
      sudo: true
      env:
        DEPLOYMENT_ENV="true"

    - name: "Python 3.7.2 on OSX"
      os: osx
      language: shell
      dist: xcode10.2

    - name: "Python 3.7.3 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version=3.7.3
        - python -m pip install --upgrade pip
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH


notifications:
  # send notifications only on master failure
  email:
    only: stable
cache: pip
# install dependencies
install:
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then travis_wait 15 pip3 install --upgrade pip; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then travis_wait 15 pip3 install --no-cache-dir -e .; fi

  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_wait 15 pip install --no-cache-dir -e .; fi

before_script: cd tests/ci_tests
# run tests
script:
  #- if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_wait 15 python test_endpoints.py; fi
  #- if [ "$TRAVIS_OS_NAME" != "windows" ]; then travis_wait 15 python3 test_endpoints.py; fi
  - cd ../..

# deploy to pip
deploy:
  - provider: pypi
    user: "mindsdb_sysadmin"
    password: $PYPI_SYSADMIN_PASSWORD
    distributions: "sdist"
    on:
      branch: stable
      condition: $DEPLOYMENT_ENV = "true"

  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_ACCESS_KEY_SECRET
    bucket: "mindsdb-installer"
    skip_cleanup: true
    region: us-west-2
    local_dir: build
    on:
      branch: stable
      
# after pip is deployed, we can deploy to dockerhub
after_deploy:
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then sleep 15; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then cd distributions/docker; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker build -t docker-build .; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker tag docker-build $REGISTRY_USER/mindsdb:latest; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then cd ../..; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "stable" ]]; then docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS" && docker push $REGISTRY_USER/mindsdb && docker logout; fi
