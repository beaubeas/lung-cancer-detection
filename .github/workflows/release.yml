name: MindsDB Releases

on:
  release:
    types: [released, prereleased]
    paths-ignore:
      - 'docs/**'
      - 'README.md'

jobs:

  check-version:
    runs-on: [self-hosted, dev]
    if: github.actor != 'mindsdbadmin'
    steps:
    # Get clean environment variables via https://github.com/marketplace/actions/github-environment-variables-action
    - uses: FranzDiebold/github-env-vars-action@v2
    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ vars.CI_PYTHON_VERSION }}
    - name: Check Version
      run: |
        python tests/scripts/check_version.py ${{ env.CI_REF_NAME }} ${{ github.event_name }}


  deploy_to_pypi:
    runs-on: [self-hosted, dev]
    needs: check-version
    if: github.actor != 'mindsdbadmin'
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ vars.CI_PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        pip install -r requirements/requirements-dev.txt
    - name: Build and publish
      env:
        TWINE_USERNAME:  __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        # This uses the version string from __about__.py, which we checked matches the git tag above
        python setup.py sdist
        twine upload dist/*

  deploy_to_dockerhub:
      # Build our docker images based on our bake file
      runs-on: [self-hosted, dev]
      needs: check-version
      if: github.actor != 'mindsdbadmin'
      steps:
        - uses: actions/checkout@v2
        # Get clean environment variables via https://github.com/marketplace/actions/github-environment-variables-action
        - uses: FranzDiebold/github-env-vars-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Docker Login
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and push
          shell: bash
          run: |
            docker buildx create --name=remote-buildkit-agent --driver=remote --use tcp://remote-buildkit-agent.infrastructure.svc.cluster.local:80 || true # Create the builder (might already exist)
            VERSION=${{ env.CI_REF_NAME }} REGISTRY=mindsdb docker buildx bake --push --progress plain -f docker/docker-bake.hcl
